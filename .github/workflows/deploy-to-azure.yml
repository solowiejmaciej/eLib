name: Build, Push, and Deploy to Azure Container Instances

on:
  push:
    branches: 
      - master
jobs:
  build-push-api:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Log in to Azure Container Registry
        run: |
          echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ secrets.ACR_LOGIN_SERVER }} -u ${{ secrets.ACR_USERNAME }} --password-stdin
      - name: Build and Push eLib API
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/elib:latest . --file ./src/api/Dockerfile
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/elib:latest

  build-push-notification:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Log in to Azure Container Registry
        run: |
          echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ secrets.ACR_LOGIN_SERVER }} -u ${{ secrets.ACR_USERNAME }} --password-stdin
      - name: Build and Push Notification Service
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/elib-notification:latest . --file ./src/eLib.NotificationService/Dockerfile
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/elib-notification:latest

  build-push-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Log in to Azure Container Registry
        run: |
          echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ secrets.ACR_LOGIN_SERVER }} -u ${{ secrets.ACR_USERNAME }} --password-stdin
      - name: Build and Push Frontend
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/elib-web:latest ./src/web/eLib --file ./src/web/eLib/Dockerfile
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/elib-web:latest

  deploy-api:
    needs: build-push-api
    runs-on: ubuntu-latest
    steps:
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Deploy eLib API
        run: |
          az container create --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name elib-api \
            --image ${{ secrets.ACR_LOGIN_SERVER }}/elib:latest \
            --cpu 1 --memory 1 \
            --ports 8080 \
            --dns-name-label elib-api \
            --ip-address Public \
            --registry-login-server ${{ secrets.ACR_LOGIN_SERVER }} \
            --registry-username ${{ secrets.ACR_USERNAME }} \
            --registry-password ${{ secrets.ACR_PASSWORD }} \
            --environment-variables \
              ASPNETCORE_ENVIRONMENT=Production \
              "AzureAppConfig=${{ secrets.AZURE_APP_CONFIG_URL }}"

  deploy-notification:
    needs: build-push-notification
    runs-on: ubuntu-latest
    steps:
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Deploy Notification Service
        run: |
          az container create --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name elib-notification-service \
            --image ${{ secrets.ACR_LOGIN_SERVER }}/elib-notification:latest \
            --cpu 1 --memory 1 \
            --ports 8080 \
            --dns-name-label elib-notification \
            --ip-address Public \
            --registry-login-server ${{ secrets.ACR_LOGIN_SERVER }} \
            --registry-username ${{ secrets.ACR_USERNAME }} \
            --registry-password ${{ secrets.ACR_PASSWORD }} \
            --environment-variables \
              ASPNETCORE_ENVIRONMENT=Production \
              "AzureAppConfig=${{ secrets.AZURE_APP_CONFIG_URL }}"

  deploy-frontend:
    needs: build-push-frontend
    runs-on: ubuntu-latest
    steps:
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Deploy Frontend
        run: |
          az container create --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name elib-web \
            --image ${{ secrets.ACR_LOGIN_SERVER }}/elib-web:latest \
            --cpu 1 --memory 1 \
            --ports 80 3000 \
            --dns-name-label elib-web \
            --ip-address Public \
            --registry-login-server ${{ secrets.ACR_LOGIN_SERVER }} \
            --registry-username ${{ secrets.ACR_USERNAME }} \
            --registry-password ${{ secrets.ACR_PASSWORD }}
