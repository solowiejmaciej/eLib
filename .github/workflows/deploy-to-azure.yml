name: Build and Deploy to Azure

on:
  push:
    branches:
      - master  # Workflow uruchamia siÄ™ na branchu master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Install Docker Compose
    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version

    # 3. Log in to Azure Container Registry
    - name: Log in to Azure Container Registry
      run: |
        echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ secrets.ACR_LOGIN_SERVER }} -u ${{ secrets.ACR_USERNAME }} --password-stdin

    # 4. Build and Push Docker Images
    - name: Build and Push Docker Images
      run: |
        docker-compose -f docker-compose.prod.yml build
        docker-compose -f docker-compose.prod.yml push

    # 5. Deploy to Azure Container Instances
    - name: Deploy to Azure Container Instances
      run: |
        az login --use-device-code
        az container create --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
          --name nginx \
          --image ${{ secrets.ACR_LOGIN_SERVER }}/nginx:latest \
          --cpu 1 --memory 1 \
          --ports 80 \
          --registry-login-server ${{ secrets.ACR_LOGIN_SERVER }} \
          --registry-username ${{ secrets.ACR_USERNAME }} \
          --registry-password ${{ secrets.ACR_PASSWORD }}

        az container create --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
          --name elib-api \
          --image ${{ secrets.ACR_LOGIN_SERVER }}/elib:latest \
          --cpu 1 --memory 1 \
          --registry-login-server ${{ secrets.ACR_LOGIN_SERVER }} \
          --registry-username ${{ secrets.ACR_USERNAME }} \
          --registry-password ${{ secrets.ACR_PASSWORD }}

        az container create --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
          --name elib-notification-service \
          --image ${{ secrets.ACR_LOGIN_SERVER }}/elib-notification:latest \
          --cpu 1 --memory 1 \
          --registry-login-server ${{ secrets.ACR_LOGIN_SERVER }} \
          --registry-username ${{ secrets.ACR_USERNAME }} \
          --registry-password ${{ secrets.ACR_PASSWORD }}

        az container create --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
          --name elib-front \
          --image ${{ secrets.ACR_LOGIN_SERVER }}/elib-web:latest \
          --cpu 1 --memory 1 \
          --registry-login-server ${{ secrets.ACR_LOGIN_SERVER }} \
          --registry-username ${{ secrets.ACR_USERNAME }} \
          --registry-password ${{ secrets.ACR_PASSWORD }}

        az container create --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
          --name postgres-db \
          --image postgres:latest \
          --cpu 1 --memory 1 \
          --ports 5432 \
          --environment-variables POSTGRES_USER=elib POSTGRES_PASSWORD=elib POSTGRES_DB=elib-db
